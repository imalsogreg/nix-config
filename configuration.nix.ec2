{ config, pkgs, ... }:

{
  imports = [ <nixpkgs/nixos/modules/virtualisation/amazon-image.nix> ];
  ec2.hvm = true;


  nixpkgs.config.allowBroken = true;
  nixpkgs.config.allowUnfree = true;
  nix.trustedBinaryCaches = [ "https://nixcache.reflex-frp.org" ];
  nix.binaryCachePublicKeys = [ "ryantrinkle.com-1:JJiAKaRv9mWgpVAz8dwewnZe0AzzEAzPkagE9SP5NWI=" ];

  networking.firewall.allowedTCPPorts = [80 443 6667 8000 8001 8080 24800];
  networking.extraHosts =
    ''
    '';

  security.sudo.enable = true;

  # Select internationalisation properties.
  i18n = {
    consoleFont = "Lat2-Terminus16";
    consoleKeyMap = "us";
    defaultLocale = "en_US.UTF-8";
  };


  # Set your time zone.
  time.timeZone = "US/Eastern";

  # List packages installed in system profile. To search by name, run:
  # $ nix-env -qaP | grep wget
  environment.systemPackages = with pkgs; [
    gitAndTools.gitFull
    wget
    gnupg
    traceroute
    xclip
    curl
    vim
    git
    haskellPackages.cabal2nix
  ];

  # List services that you want to enable:

  # Enable the OpenSSH daemon.
  services.openssh.enable = true;

  # services.synergy.server = true;

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.extraUsers.greghale = {
    isNormalUser = true;
    uid = 1000;
    description = "Greg Hale";
    extraGroups = [ "wheel" "networkmanager" ];
  };

  users.extraGroups.vboxusers.members = [ "greghale" ];

  # The NixOS release to be compatible with for stateful data such as databases.
  system.stateVersion = "17.03";

  # nginx and letsencrypt

  #nixpkgs.config.packageOverrides = pkgs: rec {
  #  simp_le = pkgs.simp_le.overrideDerivation (oldAttrs: {
  #    patches = [
  #    (pkgs.fetchpatch {
  #      url = "https://github.com/kuba/simp_le/commit/4bc788fdd611c4118c3f86b5f546779723aca5a7.patch";
  #      sha256 = "0036p11qn3plydv5s5z6i28r6ihy1ipjl0y8la0izpkiq273byfc";
  #    })
  #    ];
  #  });
  #};

  security.acme.certs."greghale.io" = {
    webroot = "/var/www/challenges";
    email = "imalsogreg@gmail.com";
  }; 

  services.nginx.enable=true;
  services.nginx.httpConfig = ''
    server {
      server_name          greghale.io;
      listen               80;
      client_max_body_size 100M;

      location /.well-known/acme-challenge {
        root /var/www/challenges;
      }

      location / {
        return 301 https://$host$request_uri;
      }

    }

    server {
      server_name greghale.io;
      listen 443 ssl;
      client_max_body_size 100M;

      ssl_certificate     ${config.security.acme.directory}/greghale.io/fullchain.pem;
      ssl_certificate_key ${config.security.acme.directory}/greghale.io/key.pem;

      # location /znc {
      #   proxy_pass https://127.0.0.1:6667;
      # }

      location / {
        proxy_pass http://127.0.0.1:8000;
      }

    }

    # server {
    #   server_name znc.greghale.io;
    #   listen 80;
    #   client_max_body_size 100M;
    #   location / {
    #     proxy_pass http://127.0.0.1:6667;
    #   }
    # }
  '';

  # services.znc = {
  #   enable = true;
  #   confOptions = {
  #     modules = [ "webadmin" "admin" ];
  #   #   userName = "imalsogreg";
  #   #   networks = {
  #   #     "freenode" = {
  #   #       server = "chat.freenode.net";
  #   #       port = 6667;
  #   #       ssl = true;
  #   #     };
  #   #   };
  #   #  nick = "imalsogreg";
  #   };
  # };
}
